<script setup lang="ts">
  // try {
  //   // Fetch first page.
  //   await usePageFetch();
  //   // Fetch menu.
  //   await useMenuFetch();
  //   // Fetch footer.
  //   await useFooterFetch();
  // } catch (e) {
  //   // eslint-disable-next-line no-console
  //   console.error(e);
  // }

  // const layout = usePageType();
  // const pageMeta = usePageMeta();

  // usePageTypeCheck();

  // const pageContent = usePageContent();
  // const { locale } = useI18n();

  // const route = useRoute();

  // const currentRoute = { ...route };
  // const localeString = `/${locale}`;
  // if (currentRoute.path.startsWith(localeString)) {
  //   currentRoute.path = currentRoute.path.slice(localeString.length);
  // }
  // if (currentRoute.path === '/') {
  //   currentRoute.path = '/index';
  // }

  // const isPreview = !!(currentRoute.query._storyblok && currentRoute.query._storyblok !== '');
  // const version = isPreview ? 'draft' : 'published';

  // const story = await useCustomAsyncStoryblok(currentRoute.path, {
  //   version,
  //   language: locale.value,
  //   resolve_relations: 'sb-blog-page.categories,sb-blog-post.categories,sb-blog-post.author',
  // });
  // console.log(story.value);

  const route = useRoute();
  const currentRoute = { ...route };
  if (currentRoute.path === '/') {
    currentRoute.path = '/index';
  }

  const params = { version: process.env.NODE_ENV !== 'production' ? 'draft' : 'published', language: 'en' };
  const storyblokApi = useStoryblokApi();
  const { data } = await useAsyncData('home', async () => await storyblokApi.get(`cdn/stories/${currentRoute.path}`, params));
  const story = ref(data.value.data.story);
</script>

<template>
  <!-- <div v-if="layout" class="app">
    <Head>
      <Title>{{ pageMeta.title }}</Title>
      <Meta name="description" :content="pageMeta.description" />
    </Head>
    <NuxtLayout :name="layout">
      <component
        :is="$resolveStoryBlokComponent(pageContent)"
        v-if="pageContent.content"
        :blok="pageContent.content"
        :raw="pageContent"
      />
    </NuxtLayout>
  </div> -->
  <div>
    <NuxtLink :to="'/'">
      Home
    </NuxtLink>
    <NuxtLink :to="'/blog'">
      blog
    </NuxtLink>
    {{ story }}
  </div>
</template>

<style lang="scss">

.app {
  font-family: $base-font;
}

</style>
